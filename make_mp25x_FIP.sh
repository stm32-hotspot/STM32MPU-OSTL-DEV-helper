#!/bin/bash -e
# (-ex is verbose)
##############################################################################################################
##############################################################################################################
###                                                                                                        ###
###  Please customize the following VARIABLEs:                                                             ###
###                                             SOC=                                                       ###
###                                             CUSTOM_DTS_NAME=                                           ###
###						SOURCES_BASE_PATH=                                         ###
###                                             SDK_BUILD_ENV_BASE=                                        ###
###                                                                                                        ###
##############################################################################################################
##############################################################################################################

#####################################################
###                                          ########
###    OPTIONAL CUSTOM CONFIGURATION         ########
###                                          ########
#####################################################

#################################################################
### CUSTOM EXTERNAL DEVICETREE                                ###
### If EXTDT_WORKING_DIR is defined, EXTDT_DIR will be ignored ###
###                                                           ###
# EXTDT_WORKING_DIR="STM32MPU-OSTL-DEV-helper/DEVICETREE/CUSTOM_EXT_DTS_FOR_DK"
# EXTDT_WORKING_DIR="STM32MPU-OSTL-DEV-helper/DEVICETREE/CUSTOM_EXT_DTS_FOR_EV"
EXTDT_WORKING_DIR="STM32MPU-OSTL-DEV-helper/DEVICETREE/CUSTOM_EXT_DTS_MINIMAL_FOR_EV"
### 
### DEVICETREE FOLDER generated by CubeMX:                    ###
USE_CUBEMX_PRJ_DIR="STM32MPU-OSTL-DEV-helper/DEVICETREE/STM32MP25x_CubeMX/CA35/DeviceTree/"
###                                                           ###
### CubeMX Project name:                                      ###
CUBEMX_PRJ_NAME="ev1-v6.0" # <- This definition overrides CUSTOM_DTS_NAME value!!
##
#################################################################

###########################################################################
# Build FIP and TF-A for this BOOT_DEVICE 
# available BOOT_DEVICE: "emmc" "sdcard" "nor"
BOOT_DEVICE="emmc"

###########################################################################
# OPTEE version: standard or min
# Available options: "optee" - "opteemin"
# OPTEE_TYPE="opteemin"
OPTEE_TYPE="optee"

###########################################################################
# Programming channel
# Available options: "usb" - "uart"
PRG_BUS="usb"

### CUSTOM u-boot configs file ######################
# CUSTOM_UBOOT_DEFCONFIG="STM32MPU-OSTL-DEV-helper/STM32MPU-OSTL-DEV-helper/TEMPLATES/STM32MP2/CONFIGS/stm32mp25_defconfig_u-boot"

##############################################################################################################
###                                                                                                 ##########
###          MANDATORY DEFINITIONs                                                                  ##########
###                                                                                                 ##########
##############################################################################################################

STM32MP_PLATFORM="stm32mp2"
SOC_BASE="stm32mp25"
SOC="${SOC_BASE}7f"

### DTS name (external dts, can be a custom name) ###
## ST board DTS names
# CUSTOM_DTS_NAME="${SOC}-ev1"
# CUSTOM_DTS_NAME="${SOC}-dk"
## External DTS example name
# CUSTOM_DTS_NAME="${SOC}-ev1-ca35tdcid-ostl""

CUSTOM_DTS_NAME="${SOC}-myboard"

SOURCES_BASE_PATH="./"
SDK_BUILD_ENV_BASE="/opt/st/${STM32MP_PLATFORM}/5.0.3-openstlinux-6.6-yocto-scarthgap-mpu-v24.11.06"

##############################################################################################################
###                                                                                                 ##########
###          OPTIONAL SETTINGs                                                                      ##########
###                                                                                                 ##########
##############################################################################################################

BUILD_TFA="1"    # Build tfa + FIP
BUILD_OPTEE="1"  # Build optee + FIP
BUILD_UBOOT="1"  # Build uboot + FIP

DO_CLEAN="1"     # Clean up the build folder & FIP_artifacts folder before build.
DO_CLEAN_DTB="1" # Clean up all DTBs before build.
DO_CLEAN_ALL="1" # Clean up FIP_artifacts folder.

BUILD_HELPER_OUTPUT="1" # Copy final artifact in OUT folder and create tar.gz archive (under ./BUILD_OUTPUT) 

##############################################################################################################
###                                                                                                 ##########
###          SYSTEM ENVIRONMENT                                                                     ##########
###                                                                                                 ##########
##############################################################################################################

SDK_BUILD_ENV_PATH="${SDK_BUILD_ENV_BASE}/environment-setup-cortexa35-ostl-linux"

for component in optee-os tf-a u-boot ddr-phy external-dt; do
    if [ "x`ls -1d stm32mp-${component}-* 2>/dev/null`" != "x" ]; then
          component_ver=`ls -1d stm32mp-${component}-*-r* | sed -e "s/stm32mp-${component}-\(.*\)-r\(.*\)/\1/g"`
       component_ver_Ra=`ls -1d stm32mp-${component}-*-r* | sed -e "s/stm32mp-${component}-\(.*\)-r\(.*\)/\2/g"`
       FWDDR_DIR="stm32mp-${component}-${component_ver}-r${component_ver_Ra}/stm32mp-${component}-${component_ver}"
    fi

    if [ "x`ls -1d ${component}-* 2>/dev/null | grep -v stm32mp`" != "x" ]; then
          component_ver=`ls -1d ${component}-*-r* | sed -e "s/${component}-\(.*\)-r\(.*\)/\1/g"`
       component_ver_Ra=`ls -1d ${component}-*-r* | sed -e "s/${component}-\(.*\)-r\(.*\)/\2/g"`
       component_ver_Rb=""
       EXTERNAL_DT_DIR="${component}-${component_ver}-r${component_ver_Ra}/${component}-${component_ver}"
    fi

    [[ "x`ls -1d ${component}-stm32mp-*-stm32mp*-r*-r* 2>/dev/null`" == "x" ]] && continue

       component_ver=`ls -1d ${component}-stm32mp-*-stm32mp*-r*-r* | sed -e "s/${component}-stm32mp-\(.*\)-stm32mp-r\(.*\)-r\(.*\)/\1/g"`
    component_ver_Ra=`ls -1d ${component}-stm32mp-*-stm32mp*-r*-r* | sed -e "s/${component}-stm32mp-\(.*\)-stm32mp-r\(.*\)-r\(.*\)/\2/g"`
    component_ver_Rb=`ls -1d ${component}-stm32mp-*-stm32mp*-r*-r* | sed -e "s/${component}-stm32mp-\(.*\)-stm32mp-r\(.*\)-r\(.*\)/\3/g"`

    case ${component} in
	"tf-a")
	  	tfa_ver_Rb=${component_ver_Rb}
		TFA_DIR="${component}-stm32mp-${component_ver}-stm32mp-r${component_ver_Ra}-r${component_ver_Rb}/${component}-stm32mp-${component_ver}-stm32mp-r${component_ver_Ra}"
		;;
	"optee-os")
	  	optee_ver_Rb=${component_ver_Rb}
		OPTEE_DIR="${component}-stm32mp-${component_ver}-stm32mp-r${component_ver_Ra}-r${component_ver_Rb}/${component}-stm32mp-${component_ver}-stm32mp-r${component_ver_Ra}"
		;;
	"u-boot")
	  	uboot_ver_Rb=${component_ver_Rb}
		UBOOT_DIR="${component}-stm32mp-${component_ver}-stm32mp-r${component_ver_Ra}-r${component_ver_Rb}/${component}-stm32mp-${component_ver}-stm32mp-r${component_ver_Ra}"
		;;
    esac
done

NUM_COREs=4

cd ${SOURCES_BASE_PATH}
CURDIR=`pwd`

if [ -z "${EXTDT_WORKING_DIR}" ]; then
   EXTDT_DIR="${CURDIR}/${EXTERNAL_DT_DIR}"
 else
   for d in tf-a optee u-boot; do
     [[ ! -d "${EXTDT_WORKING_DIR}/${d}" ]] && echo -e "\n\tError: folder ${EXTDT_WORKING_DIR}/${d} does not exist, please correct the path\n\n" && exit 0
   done
   EXTDT_DIR="${CURDIR}/${EXTDT_WORKING_DIR}"
fi

FWDDR_DIR="${CURDIR}/${FWDDR_DIR}"

SDK_HELPER_OUTPUT="BUILD_OUTPUT"
SDK_HELPER_OUTPUT_FIP="${SDK_HELPER_OUTPUT}/fip"
SDK_HELPER_OUTPUT_TFA="${SDK_HELPER_OUTPUT}/tfa"

FIP_DEPLOYDIR_ROOT="${CURDIR}/FIP_artifacts"

##############################################################################################################
##############################################################################################################
###                                                                                                 ##########
###          START OF OPERATIONs                                                                    ##########
###                                                                                                 ##########
##############################################################################################################
##############################################################################################################

if [[ ! -z "${USE_CUBEMX_PRJ_DIR}" ]]; then
  if [[ -d "${USE_CUBEMX_PRJ_DIR}/CA35/DeviceTree/" ]]; then
     [[ ! -z "${CUBEMX_PRJ_NAME}" ]] && CUSTOM_DTS_NAME="${SOC}-${CUBEMX_PRJ_NAME}-mx"
     CUBEMX_PRJ_DIR="${CURDIR}/${USE_CUBEMX_PRJ_DIR}/CA35/DeviceTree/${CUBEMX_PRJ_NAME}"
  elif [[ -d "${USE_CUBEMX_PRJ_DIR}" ]]; then
     [[ ! -z "${CUBEMX_PRJ_NAME}" ]] && CUSTOM_DTS_NAME="${SOC}-${CUBEMX_PRJ_NAME}-mx"
     CUBEMX_PRJ_DIR="${CURDIR}/${USE_CUBEMX_PRJ_DIR}/${CUBEMX_PRJ_NAME}"
  fi
fi

if [[ "x${DO_CLEAN_ALL}" = "x1" ]]; then
  DO_CLEAN="1"
  rm -rf ${FIP_DEPLOYDIR_ROOT}
fi

FIP_CONFIGs="${OPTEE_TYPE}-${BOOT_DEVICE} ${OPTEE_TYPE}-programmer-${PRG_BUS}"

# Toolchain setup
source ${SDK_BUILD_ENV_PATH}
export EXTDT_DIR
export FWDDR_DIR

function do_manage_cubemx_prj() {
  if [[ ! -d "${CUBEMX_PRJ_DIR}" ]]; then
     echo ""
     echo " Missing or unaccessible CubeMX project folder: ->${CUBEMX_PRJ_DIR}<- !"
     echo " Exiting now."
     echo ""
     exit 0
  fi
  if [[ -z "${EXTDT_WORKING_DIR}" ]]; then
     echo ""
     echo " Missing External DTS folder definition: ->${EXTDT_WORKING_DIR}<- !"
     echo " Exiting now."
     echo ""
     exit 0
  fi

  # Adjust misaligned paths
  cd ${EXTDT_WORKING_DIR}/
  mkdir -p linux optee tf-a u-boot
  [[ ! -e kernel ]] && ln -s linux kernel
  [[ ! -e optee-os ]] && ln -s optee optee-os
  cd -
  for folder in kernel optee-os tf-a u-boot; do
     cd ${EXTDT_WORKING_DIR}/${folder}
     for dtsfile in `ls ${CUBEMX_PRJ_DIR}/${folder}/*.dts ${CUBEMX_PRJ_DIR}/${folder}/*.dtsi`; do
      #  echo ${dtsfile}
       DTSNAME=`basename ${dtsfile}`
       [[ -L ${DTSNAME} ]] && rm ${DTSNAME}
       [[ -f ${DTSNAME} ]] && mv ${DTSNAME} ${DTSNAME}_BCK-`date +%Y%m%d%H%M%S`
       ln -s ${dtsfile} .
     done
     cd - > /dev/null
  done
  TEMPLATE_DIR="STM32MPU-OSTL-DEV-helper/TEMPLATES/STM32MP2"
  for folder in kernel optee-os u-boot; do
     for dtsfile in `ls ${CUBEMX_PRJ_DIR}/${folder}/*.dts`; do
       # DTSNAME=`basename ${dtsfile} | sed -e 's/\.dts$//g'`
       MKFILE="Makefile"
       [[ "${folder}" == "optee-os" ]] && MKFILE="conf.mk"
       sed -e "s/SDKHELPERTEMPLATE/${CUSTOM_DTS_NAME}/g" ${TEMPLATE_DIR}/${folder}/${MKFILE} > ${EXTDT_WORKING_DIR}/${folder}/${MKFILE}
     done
  done

  touch /tmp/FIP_SCRIPT_done.txt
}

function do_build_uboot() {

  export EXTDT_DIR
  rm -rf   ${FIP_DEPLOYDIR_ROOT}/u-boot ${FIP_DEPLOYDIR_ROOT}/fip-${CUSTOM_DTS_NAME}-*.bin
  mkdir -p ${FIP_DEPLOYDIR_ROOT}/u-boot
  
  cd ${UBOOT_DIR}

  UBOOT_DEFCONFIG="${SOC_BASE}_defconfig"
  if [ ! -z "${CUSTOM_UBOOT_DEFCONFIG}" ]; then
     if [ -f "../../${CUSTOM_UBOOT_DEFCONFIG}" ]; then
        cp -v ../../${CUSTOM_UBOOT_DEFCONFIG} configs/${SOC_BASE}_custom_defconfig
        UBOOT_DEFCONFIG="${SOC_BASE}_custom_defconfig"
     fi
  fi
  
  [[     "x${DO_CLEAN}" = "x1" ]] && make -f ../Makefile.sdk UBOOT_DEFCONFIG=${UBOOT_DEFCONFIG} DEVICE_TREE=${CUSTOM_DTS_NAME} DEPLOYDIR=${FIP_DEPLOYDIR_ROOT}/u-boot clean
  [[     "x${DO_CLEAN}" = "x1" ]] && rm -rf ../deploy
  [[ "x${DO_CLEAN_DTB}" = "x1" ]] && rm -f ../build/${UBOOT_DEFCONFIG}/arch/arm/dts/.${SOC_BASE}* \
					   ../build/${UBOOT_DEFCONFIG}/arch/arm/dts/*dtb \
					   ${EXTDT_DIR}/u-boot/*dtb ${EXTDT_DIR}/u-boot/.${SOC_BASE}*
  [[ "x${DO_NOT_BUILD}" = "x1" ]] && cd - && return 0
  
  for dt in "stm32mp257f-dk" ${CUSTOM_DTS_NAME}; do
     make -f ../Makefile.sdk UBOOT_CONFIG=${BOOT_DEVICE} DEVICE_TREE=${dt} \
			     UBOOT_DEFCONFIG=${UBOOT_DEFCONFIG} UBOOT_BINARY=u-boot.dtb \
			     DEPLOYDIR=${FIP_DEPLOYDIR_ROOT}/u-boot uboot
  done

  cd -
}

function do_build_optee() {
  
  export EXTDT_DIR
  rm -rf   ${FIP_DEPLOYDIR_ROOT}/optee ${FIP_DEPLOYDIR_ROOT}/fip-${CUSTOM_DTS_NAME}-*.bin
  mkdir -p ${FIP_DEPLOYDIR_ROOT}/optee

  cd ${OPTEE_DIR}

  [[ "x${DO_CLEAN}" = "x1" ]] && make -f ../Makefile.sdk CFG_EMBED_DTB_SOURCE_FILE=${CUSTOM_DTS_NAME} DEPLOYDIR=${FIP_DEPLOYDIR_ROOT}/optee clean
  [[ "x${DO_CLEAN_DTB}" = "x1" ]] && rm -f ../build/${CUSTOM_DTS_NAME}/core/arch/arm/dts/.${STM32MP_PLATFORM}* out/arm-plat-${STM32MP_PLATFORM}/core/arch/arm/dts/${STM32MP_PLATFORM}*
  [[ "x${DO_NOT_BUILD}" = "x1" ]] && cd - && return 0

  OPTEE_EXTRA_OEMAKE_OPTs="-j${NUM_COREs} PLATFORM=${STM32MP_PLATFORM} CROSS_COMPILE_core=aarch64-ostl-linux- \
			  CROSS_COMPILE_ta_arm64=aarch64-ostl-linux- ARCH=arm CFG_ARM64_core=y NOWERROR=1 \
			  LDFLAGS= CFG_EXT_DTS=${EXTDT_DIR}/optee CFG_TEE_CORE_LOG_LEVEL=2 \
			  CFG_TEE_CORE_DEBUG=y CFG_SCMI_SCPFW=y"
 
  make -f ../Makefile.sdk CFG_EMBED_DTB_SOURCE_FILE=${CUSTOM_DTS_NAME} DEPLOYDIR=${FIP_DEPLOYDIR_ROOT}/optee OPTEE_CONFIG=${OPTEE_TYPE} EXTRA_OEMAKE="${OPTEE_EXTRA_OEMAKE_OPTs}" optee

  cd -
}

function do_build_tfa() {
  
  export EXTDT_DIR
  export FWDDR_DIR
  rm -rf   ${FIP_DEPLOYDIR_ROOT}/arm-trusted-firmware ${FIP_DEPLOYDIR_ROOT}/fip-${CUSTOM_DTS_NAME}-*.bin

  cd ${TFA_DIR}
 
  TFA_COMMON_OPTs="ELF_DEBUG_ENABLE=1 DEPLOYDIR=${FIP_DEPLOYDIR_ROOT}/arm-trusted-firmware"
  TFA_EXTRA_OEMAKE_OPTs="-j${NUM_COREs} PLAT=${STM32MP_PLATFORM} ARCH=aarch64 ARM_ARCH_MAJOR=8 CROSS_COMPILE=aarch64-ostl-linux- \
			DEBUG=0 LOG_LEVEL=40 TFA_EXTERNAL_DT=${EXTDT_DIR}/tf-a"

  for tfa_target in ${FIP_CONFIGs}; do
   
     TFA_SPECIFIC_OPTs="TF_A_CONFIG=${tfa_target} TF_A_DEVICETREE=${CUSTOM_DTS_NAME} TF_A_ENABLE_FWDDR=1"
     
     [[ "x${DO_CLEAN}" = "x1" ]] && make -f ../Makefile.sdk ${TFA_SPECIFIC_OPTs} clean
     [[ "x${DO_CLEAN_DTB}" = "x1" ]] && rm -fr ../build/${tfa_target}${CUSTOM_DTS_NAME}/fdts
       
     # Build stm32 binary (foreach TF_A_CONFIG)
     make -f ../Makefile.sdk ${TFA_COMMON_OPTs} ${TFA_SPECIFIC_OPTs} EXTRA_OEMAKE="${TFA_EXTRA_OEMAKE_OPTs}" stm32
  done
  
  make -f ../Makefile.sdk DEPLOYDIR=${FIP_DEPLOYDIR_ROOT}/arm-trusted-firmware metadata

  cd -
}


function do_build_fip() {
  
  export EXTDT_DIR
  export FWDDR_DIR
  cd ${UBOOT_DIR}
  
  for storage in programmer-${PRG_BUS} ${BOOT_DEVICE}; do
    device="${OPTEE_TYPE}-${storage}"

     make -f ../Makefile.sdk UBOOT_CONFIG=${device} FIP_CONFIG=${device} UBOOT_BINARY=u-boot.dtb \
			     FIP_DEPLOYDIR_ROOT=${FIP_DEPLOYDIR_ROOT} DEVICE_TREE=${CUSTOM_DTS_NAME} \
			     UBOOT_DEFCONFIG=${UBOOT_DEFCONFIG} fip
  done  

  cd -
}

[[ ! -z "${USE_CUBEMX_PRJ_DIR}" ]] && do_manage_cubemx_prj
[[ "x${BUILD_UBOOT}" == "x1" ]] && do_build_uboot
[[ "x${BUILD_OPTEE}" == "x1" ]] && do_build_optee
[[   "x${BUILD_TFA}" == "x1" ]] && do_build_tfa 

do_build_fip # Assemble FIP file

echo; echo; echo

[[ "x${BUILD_HELPER_OUTPUT}" != "x1" ]] && exit 0

mkdir -p ${SDK_HELPER_OUTPUT_FIP}
mkdir -p ${SDK_HELPER_OUTPUT_TFA}

cp -v ${FIP_DEPLOYDIR_ROOT}/arm-trusted-firmware/metadata.bin 	 ${SDK_HELPER_OUTPUT_TFA}/metadata.bin

SRC_FILENAME="${CUSTOM_DTS_NAME}-${OPTEE_TYPE}-${BOOT_DEVICE}"
SRC_FILENAME_DDR="${CUSTOM_DTS_NAME}-ddr-${OPTEE_TYPE}-${BOOT_DEVICE}"
DST_FILENAME="${BOOT_DEVICE}"

cp -v ${FIP_DEPLOYDIR_ROOT}/arm-trusted-firmware/tf-a-${SRC_FILENAME}.stm32 \
      ${SDK_HELPER_OUTPUT_TFA}/tfa_${DST_FILENAME}.stm32
cp -v ${FIP_DEPLOYDIR_ROOT}/fip/fip-${SRC_FILENAME}.bin     ${SDK_HELPER_OUTPUT_FIP}/fip.bin
cp -v ${FIP_DEPLOYDIR_ROOT}/fip/fip-${SRC_FILENAME_DDR}.bin ${SDK_HELPER_OUTPUT_FIP}/fip-ddr.bin

PRG_SRC_FILENAME="${CUSTOM_DTS_NAME}-${OPTEE_TYPE}-programmer-${PRG_BUS}"
PRG_DST_FILENAME="${PRG_BUS}"

cp -v ${FIP_DEPLOYDIR_ROOT}/arm-trusted-firmware/tf-a-${PRG_SRC_FILENAME}.stm32 \
      ${SDK_HELPER_OUTPUT_TFA}/tfa_${PRG_DST_FILENAME}.stm32
cp -v ${FIP_DEPLOYDIR_ROOT}/fip/fip-${PRG_SRC_FILENAME}.bin ${SDK_HELPER_OUTPUT_FIP}/fip_${PRG_DST_FILENAME}.bin

cp -rv STM32MPU-OSTL-DEV-helper/FLASH_LAYOUT   ${SDK_HELPER_OUTPUT}/
mv ${SDK_HELPER_OUTPUT}/FLASH_LAYOUT/flash.sh  ${SDK_HELPER_OUTPUT}/
chmod 755 ${SDK_HELPER_OUTPUT}/flash.sh
mv ${SDK_HELPER_OUTPUT}/FLASH_LAYOUT/flash.bat ${SDK_HELPER_OUTPUT}/


tar czf /tmp/${CUSTOM_DTS_NAME}_binaries.tar.gz  ${SDK_HELPER_OUTPUT}
echo; echo
ls -lh /tmp/${CUSTOM_DTS_NAME}_binaries.tar.gz 

echo; echo; echo
exit 0
